name: CozyCup Backend - CI/CD

on:
  push:
    branches: [main]

jobs:
  build-test-lint-docker:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Create .env file from secret
        run: |
          printf '%s' "${{ secrets.ENV_FILE }}" > .env
          # Force local Mongo for CI (overrides any value in the secret)
          echo "MONGO_URI=mongodb://127.0.0.1:27017/cozycup_ci" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      # Wait until the Mongo service is healthy
      - name: Wait for Mongo
        run: |
          for i in {1..60}; do
            if mongosh --quiet --eval "db.runCommand({ ping: 1 })" mongodb://127.0.0.1:27017/cozycup_ci; then
              echo "Mongo is up"; exit 0;
            fi
            echo "Waiting for Mongo ($i)..."; sleep 2;
          done
          echo "Mongo did not become ready in time" >&2; exit 1

      - name: Tests (in-band + longer timeout)
        run: npm test -- --runInBand --testTimeout=60000

      - name: Docker build (npm script)
        run: npm run docker:build

      - name: Save image as tar
        run: docker save cozycup-api:dev -o cozycup-api-dev.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: cozycup-api-dev-image
          path: cozycup-api-dev.tar
          if-no-files-found: error
