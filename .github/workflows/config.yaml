name: CozyCup Backend - CI/CD

on:
  push:
    branches: [main]

jobs:
  test-lint-docker-build:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --dns-result-order=ipv4first

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Create .env file (force CI Mongo)
        run: |
          printf '%s' "${{ secrets.ENV_FILE }}" > .env
          echo "MONGO_URI=mongodb://127.0.0.1:27017/cozycup_ci" >> .env
          echo "MONGO_URI_TEST=mongodb://127.0.0.1:27017/cozycup_ci" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Wait for Mongo (TCP)
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/27017) >/dev/null 2>&1 && { echo "Mongo is up"; exit 0; }
            echo "Waiting for Mongo ($i)..."; sleep 2;
          done
          echo "Mongo did not become ready in time" >&2; exit 1

      - name: Run Tests
        run: npm test -- --runInBand --testTimeout=60000

      - name: Docker image build from npm script
        run: npm run docker:build

      - name: Save image as tar
        run: docker save cozycup-api:dev -o cozycup-api-dev.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: cozycup-api-dev-image
          path: cozycup-api-dev.tar
          if-no-files-found: error

      - name: Deploy App to Render
        if:  ${{ github.ref == 'refs/heads/main' }}
        run: curl -fsSL -X POST "$RENDER_DEPLOY_HOOK"
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
